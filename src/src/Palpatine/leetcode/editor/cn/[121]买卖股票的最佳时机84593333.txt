class Solution {
    public int maxProfit(int[] prices) {
//        if (prices == null || prices.length == 0) {
//            return 0;
//        }
//        int min = Integer.MAX_VALUE;
//        int minPos = -1;
//        for (int i = 0; i < prices.length - 1; i++) {
//            if (min > prices[i]) {
//                min = prices[i];
//                minPos = i;
//            }
//        }
//        if (minPos == prices.length - 1) {
//            return 0;
//        }
//        int max = Integer.MIN_VALUE;
//        for (int i = minPos; i < prices.length; i++) {
//            if (max < prices[i]) {
//                max = prices[i];
//            }
//        }
//        return max - min;
//
//        int curMax = 0, maxSoFar = 0;
//        for (int i = 1; i < prices.length; i++) {
//            curMax = Math.max(0, curMax += prices[i] - prices[i - 1]);
//            maxSoFar = Math.max(maxSoFar, curMax);
//        }
//        return maxSoFar;

        int[][] dp = new int[prices.length][2];
        dp[0][0] = 0;
        dp[0][1] = Integer.MIN_VALUE;
        for (int i = 1; i < prices.length; i++) {
            dp[i][0] = Math.max(dp[i - 1][0], dp[i - 1][1] + prices[i]);
            dp[i][1] = Math.max(dp[i - 1][1], -prices[i]);
        }
        return dp[prices.length - 1][0];

    }
}

//runtime_error:Line 33: java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
//last_testcase:[]
