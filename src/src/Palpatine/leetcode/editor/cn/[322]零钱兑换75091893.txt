class Solution {

    public int coinChange(int[] coins, int amount) {
        return dp(coins, amount);
    }

    Map<Integer, Integer> dpMap = new HashMap<>();

    private int dp(int[] coins, int amount) {
        if (amount == 0) {
            return 0;
        }
        if (amount < 0) {
            return -1;
        }
        int needCoin = 0;
        for (int coin : coins) {
            int lastRes = dp(coins, amount - coin);
            if (lastRes == -1) {
                continue;
            }
            dpMap.put(amount, Math.min(dpMap.getOrDefault(amount, Integer.MAX_VALUE), lastRes + 1)) ;
        }
        return dpMap.get(amount);
    }
}

//runtime_error:Line 24: java.lang.NullPointerException
//last_testcase:[2] 3
