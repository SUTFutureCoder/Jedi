class Solution {
    public int minPathSum(int[][] grid) {
        if (grid.length == 0) {
            return 0;
        }
        int x = grid.length;
        int y = grid[0].length;
        int[][] dp = new int[x + 1][y + 1];
        for (int i = 0; i <= x; i++) {
            dp[i][0] = Integer.MAX_VALUE;
            dp[0][i] = Integer.MAX_VALUE;
        }
        dp[1][1] = grid[0][0];
        for (int i = 0; i < x; i++) {
            for (int j = 0; j < y; j++) {
                if (i == 0 && j == 0) {
                    continue;
                }
                dp[i + 1][j + 1] = Math.min(dp[i][j + 1], dp[i + 1][j]) + grid[i][j];
            }
        }

        return dp[x][y];
    }
}

//runtime_error:Line 11: java.lang.ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 3
//last_testcase:[[1,2],[5,6],[1,1]]
