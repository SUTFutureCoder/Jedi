class Solution {
    public int jump(int[] nums) {
        if (nums.length <= 1) {
            return 0;
        }
        int[] table = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            for (int s = 0; s <= nums[i] && i + s < nums.length; s++) {
                // 如果之前已经有值，则不赋值
                if (i == 0) {
                    table[i + s] = 1;
                } else if (table[i + s] == 0){
                    table[i + s] = table[i - 1] + 1;
                }

                System.out.println(Arrays.toString(table));
                // 在构造过程中到达最后位置
                if (i + s == nums.length - 1) {
                    return table[i + s];
                }
            }
        }
        return 0;
    }
}

//total_testcases:92
//total_correct:64
//input_formatted:[1,1,1,1]
//expected_output:3
//code_output:2
